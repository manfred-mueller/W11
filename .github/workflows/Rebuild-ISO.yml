name: Build Custom Windows 11 ISO (Windows Runner, oscdimg via curl + OneDrive)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

env:
  ISO_NAME: windows-11-25h2.iso
  ONEDRIVE_REMOTE: ${{ secrets.ONEDRIVE_REMOTE || 'OneDrive' }}
  ONEDRIVE_PATH: ${{ secrets.ONEDRIVE_PATH || 'W11-Releases' }}
  RCLONE_CONFIG_BASE64: ${{ secrets.RCLONE_CONFIG_BASE64 }}

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get oscdimg.exe (Microsoft Symbol Server) + tools
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          curl.exe -L -A "Microsoft-Symbol-Server/10.0.0.0" `
            "https://msdl.microsoft.com/download/symbols/oscdimg.exe/688CABB065000/oscdimg.exe" `
            -o oscdimg.exe
          if (-not (Test-Path .\oscdimg.exe)) { throw "oscdimg.exe download failed." }
          Unblock-File .\oscdimg.exe
          "OSCDIMG=$((Resolve-Path .\oscdimg.exe).Path)" | Out-File -FilePath $env:GITHUB_ENV -Append

          choco install 7zip -y --no-progress
          choco install rclone -y --no-progress
          & "$Env:ProgramFiles\7-Zip\7z.exe" | Out-Null
          rclone version | Out-Null

      - name: Restore rclone config (Windows, from BASE64)
        shell: powershell
        env:
          RCLONE_CONFIG_BASE64: ${{ secrets.RCLONE_CONFIG_BASE64 }}
        run: |
          $ErrorActionPreference = 'Stop'
          if ([string]::IsNullOrEmpty($env:RCLONE_CONFIG_BASE64)) {
            throw "RCLONE_CONFIG_BASE64 secret is missing"
          }
          $cfgDir = "$env:APPDATA\rclone"
          New-Item -ItemType Directory -Force -Path $cfgDir | Out-Null
          $bytes = [Convert]::FromBase64String($env:RCLONE_CONFIG_BASE64)
          [IO.File]::WriteAllBytes((Join-Path $cfgDir 'rclone.conf'), $bytes)
          rclone listremotes

      - name: Download Windows 10 ISO (German)
        shell: powershell
        run: |
          curl.exe -L -o Win10.iso "https://archive.it-bachmann.de/iso/windows/desktop/10/19041.208.Vibranium-X64-DE-CLIENTPRO%20.ISO"

      - name: Download Windows 11 ISO (German)
        shell: powershell
        run: |
          curl.exe -L -o Win11.iso "https://software-static.download.prss.microsoft.com/dbazure/888969d5-f34g-4e03-ac9d-1f9786c66749/26200.6584.250915-1905.25h2_ge_release_svc_refresh_CLIENT_CONSUMER_x64FRE_de-de.iso"

      - name: Extract ISOs
        shell: powershell
        run: |
          & "$Env:ProgramFiles\7-Zip\7z.exe" x -y Win10.iso -oWin10_Extracted | Out-Null
          & "$Env:ProgramFiles\7-Zip\7z.exe" x -y Win11.iso -oWin11_Extracted | Out-Null

      - name: Replace install.wim
        shell: powershell
        run: |
          $src = Get-Item -ErrorAction Stop Win11_Extracted\sources\install.wim
          Copy-Item $src.FullName Win10_Extracted\sources\install.wim -Force

      - name: Build ISO with oscdimg (UDF + ISO9660, BIOS+UEFI)
        shell: powershell
        run: |
          $uefi = "efi\microsoft\boot\efisys.bin"
          if (-not (Test-Path "Win10_Extracted\$uefi")) {
            $uefi = "efi\microsoft\boot\efisys_noprompt.bin"
          }
          & "$env:OSCDIMG" -m -o -u2 -udfver102 `
            -bootdata:2#p0,e,bWin10_Extracted\boot\etfsboot.com#pEF,e,bWin10_Extracted\$uefi `
            Win10_Extracted $env:ISO_NAME

      - name: Compute ISO SHA256
        id: sha256
        shell: powershell
        run: |
          $h = (Get-FileHash $env:ISO_NAME -Algorithm SHA256).Hash.ToLower()
          "$h $($env:ISO_NAME)" | Out-File "$env:ISO_NAME.sha256" -Encoding ascii
          "iso_sha256=$h" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Validate OneDrive remote
        shell: powershell
        run: |
          rclone listremotes
          rclone about "${{ env.ONEDRIVE_REMOTE }}:" | Out-Null

      - name: Upload ISO + SHA256 to OneDrive and create share link
        id: upload
        shell: powershell
        run: |
          $target = "${{ env.ONEDRIVE_REMOTE }}:${{ env.ONEDRIVE_PATH }}/$(Get-Date -Format 'yyyy-MM-dd')-run-${{ github.run_number }}"
          rclone mkdir $target | Out-Null
          rclone copy "$env:ISO_NAME" $target --onedrive-chunk-size 100M --progress=false
          rclone copy "$env:ISO_NAME.sha256" $target --progress=false
          $link = (rclone link "$target/$env:ISO_NAME" 2>$null)
          if (-not $link) { $link = "" }
          "link=$link" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Compute release date
        id: vars
        shell: powershell
        run: |
          "today=$(Get-Date -Format 'yyyy-MM-dd')" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Create GitHub Release (no ISO asset, link to OneDrive)
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.run_number }}"
          name: "Custom Windows 11 ISO (${{ steps.vars.outputs.today }} #${{ github.run_number }})"
          body: |
            Built on Windows with oscdimg (UDF + ISO9660; BIOS + UEFI).
            - ISO SHA256: ${{ env.iso_sha256 }}
            **OneDrive (full ISO):** [${{ env.ISO_NAME }}](${{ steps.upload.outputs.link }})
            Verify locally:
            ```powershell
            Get-FileHash .\${{ env.ISO_NAME }} -Algorithm SHA256
            ```
