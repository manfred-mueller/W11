name: Build Custom Windows ISO

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
        - name: windows-11
    runs-on: ubuntu-latest
    name: Create a Win11 bootable ISO with Win10 Setup

    steps:
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y p7zip-full wget genisoimage xorriso

      - name: Download Windows 10 ISO (German)
        run: |
          wget -O Win10.iso "https://archive.it-bachmann.de/iso/windows/desktop/10/19041.208.Vibranium-X64-DE-CLIENTPRO%20.ISO"

      - name: Download Windows 11 ISO (German)
        run: |
          wget -O Win11.iso "https://archive.it-bachmann.de/iso/windows/desktop/11/26100.1.Germanium-X64-DE-XXL-SUPER-MULTI.ISO"

      - name: Extract ISOs
        run: |
          mkdir Win10_Extracted Win11_Extracted
          7z x Win10.iso -oWin10_Extracted
          7z x Win11.iso -oWin11_Extracted

      - name: Replace install.wim
        run: |
          src_wim=$(find Win11_Extracted -name "install.wim" | head -n 1)
          dest_dir="Win10_Extracted/sources"
          if [ -f "$src_wim" ]; then
            cp "$src_wim" "$dest_dir/install.wim"
          else
            echo "install.wim not found in Win11 ISO."
            exit 1
          fi

      - name: Rebuild ISO using xorriso
        run: |
          mkdir iso_output
          xorriso -as mkisofs \
            -iso-level 3 \
            -o custom_win11_installer.iso \
            -full-iso9660-filenames \
            -volid "CUSTOM_WIN11" \
            -b boot/etfsboot.com \
            -no-emul-boot \
            -boot-load-size 8 \
            -boot-info-table \
            Win10_Extracted

      - name: Upload Custom ISO
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: custom_win11_installer.iso
      
      - name: Set artifact_url
        id: set_artifact_url
        run: echo "artifact_url=${{ steps.upload_artifact.outputs.artifact-url }}" >> $env:GITHUB_ENV
        
      - name: Build summary
        id: build_summary
        run: |
          Add-Content $env:GITHUB_STEP_SUMMARY @"
          | Property | Value |
          | :--- | :--- |
          | Name | [${{ matrix.name }}]($env:artifact_url) |
          "@
          # Save the GITHUB_STEP_SUMMARY contents to a file
          (Get-Content $env:GITHUB_STEP_SUMMARY) | Set-Content summary.md
          echo "name=${{ matrix.name }}" >> $env:GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.build }}.${{ github.run_number }}"
          release_name: ${{ env.name }}
          body_path: summary.md
          draft: false
          prerelease: false
